.action-wrapper {
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;

  background-color: #00000000;

  font-family: Arial, sans-serif;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
  
  /* Add responsive classes for different button widths */
  &.compact-mode-1 {
    .button-settings-icon {
      display: none;
      margin-left: 8px;
    }
  }
  
  &.compact-mode-2 {
    .button-icon {
      display: none;
    }
    
    .button-settings-icon {
      display: none;
      margin-left: 8px;
    }
    
  }
  
  &.compact-mode-3 {
    .button-icon {
      display: none;
    }
    
    .button-settings-icon {
      display: none;
    }
    
    .button-action-text {
      display: none;
    }
    
    .button-action-icon {
      display: flex;
      margin-right: 0;
    }
  }
  
  &.compact-mode-4 {
    .button-icon {
      display: none;
    }
    
    .button-settings-icon {
      display: none;
    }
    
    .button-action-text {
      display: none;
    }
    
    .button-action-icon {
      display: none;
    }
    
    .button-text {
      text-align: center;
      width: 100%;
    }
    
    .button-left {
      width: 100%;
      justify-content: center;
    }
    
    .button-right {
      display: none;
    }
  }
  
  &.compact-mode-5 {
    .button-icon,
    .button-text,
    .button-action-text,
    .button-settings-icon {
      display: none;
    }
    
    button {
      padding: 8px; /* Reduce padding to give more space to the icon */
    }
    
    .button-action-icon {
      display: flex;
      margin: 0;
      width: 80%; /* Take full width */
      justify-content: center;
      align-items: center;
      
      img.action-icon-svg {
        width: 60%; /* Scale to take most of the space */
        height: 60%; /* Scale to take most of the space */
        filter: invert(70%); /* Match the gray filter from normal mode */
        max-width: 48px; /* Set a reasonable maximum size */
        max-height: 48px; /* Set a reasonable maximum size */
        
        /* Make the plus icon (embed action) slightly larger to compensate for optical illusion */
        &[data-action-type="embed"] {
          transform: scale(1.15);
        }
        
        /* No hover effect on the icon itself as we're using the button hover effect */
      }
    }
    
    .button-content {
      justify-content: center; /* Center the content */
      height: 100%; /* Take full height */
    }
    
    .button-left {
      display: none; /* Hide left section completely */
    }
    
    .button-right {
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 100%;
      margin: 0; /* Remove any margin */
    }
  }
  
  /* Unified rule for single-element modes (4 and 5) */
  &.compact-mode-4,
  &.compact-mode-5 {
    /* Common styles for button content */
    .button-content {
      justify-content: center; /* Center the content */
      height: 100%; /* Take full height */
    }
    
    /* Reduce padding for more space */
    button {
      padding: 8px;
    }
    
    /* Hide settings icon in both modes */
    .button-settings-icon {
      display: none;
    }
  }
  
  &__main-button {
    width: 100%;
    height: 100%;
    min-width: 0; /* Allow shrinking to prevent overflow */
    border-radius: 10px;

    button {
      width: 100%;
      height: 100%;

      padding: 12px 15px;

      background-color: transparent;
      color: white;
      
      border: none;
      border-radius: 10px;
      position: relative;
      overflow: hidden;

      font-size: 16px;
      font-weight: 500;

      cursor: pointer;

      transition: all 0.3s ease;
      
      &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255, 255, 255, 0);
        transition: background-color 0.3s ease;
        pointer-events: none;
        border-radius: 10px;
      }
      
      &:hover::after {
        background-color: rgba(255, 255, 255, 0.1);
      }
      
      &:active::after {
        background-color: rgba(255, 255, 255, 0.05);
      }
      
      .button-content {
        width: 100%;
        
        display: flex;
        justify-content: space-between;
        align-items: center;
        min-width: 0; /* Allows flex items to shrink below content size */
      }
      
      .button-left {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        min-width: 0; /* Allows flex items to shrink below content size */
      }
      
      .button-right {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        min-width: 0; /* Allows flex items to shrink below content size */
      }
      
      .button-icon {
        margin-right: 8px;
        display: flex;
        align-items: center;
        flex-shrink: 1; /* Allow icon to shrink */
        
        img.button-icon-svg {
          width: 100%;
          height: 100%;
          filter: invert(100%);
        }
      }
      
      .button-text {
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex-shrink: 0; /* Prevent text from shrinking */
      }
      
      .button-action-text {
        color: rgba(255, 255, 255, 0.6);
        font-size: 14px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex-shrink: 0; /* Prevent text from shrinking */
      }
      
      .button-action-icon {
        display: none; /* Hidden by default, shown in compact modes 3 and 4 */
        align-items: center;
        margin-right: 8px;

      img.action-icon-svg {
        width: 100%;
        height: 100%;
        filter: invert(70%);
        transition: all 0.2s ease;
        
        /* Make the plus icon (embed action) slightly larger to compensate for optical illusion */
        &[data-action-type="embed"] {
          transform: scale(1.15);
        }
        
        /* No hover effect on the icon itself as we're using the button hover effect */
      }
      }
      
      .button-settings-icon {
        display: flex;
        align-items: center;
        cursor: pointer;
        padding: 2px;
        border-radius: 4px;
        transition: all 0.2s ease;
        flex-shrink: 1; /* Allow settings icon to shrink */
        margin-left: 8px;
        
        
        img.settings-icon-svg {
          width: 18px;
          height: 18px;
          filter: invert(70%);
          transition: all 0.2s ease;
          
        }
      }
      
      &--disabled {
        cursor: not-allowed;
        opacity: 0.5;
      }
    }
  }
  
  &__tabs {
    background-color: #32373c;
    padding: 22px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    transition: background-color 0.3s ease;
    box-sizing: border-box;
    
    .tabs-row {
      display: flex;
      width: 100%;
      border-radius: 6px;
      overflow: hidden;
      
      .tab {
        flex: 1;
        padding: 10px 12px;
        text-align: center;
        background-color: #3a3a44;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
        user-select: none;
        position: relative;
        overflow: hidden;
        
        &::after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: rgba(255, 255, 255, 0);
          transition: background-color 0.3s ease;
          pointer-events: none;
        }
        
        &:hover::after {
          background-color: rgba(255, 255, 255, 0.1);
        }
        
        &.selected {
          background-color: #4a4a54;
          position: relative;
          
          &::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background-color: #6a6aff;
          }
        }
      }
      
      &.target-tabs .tab {
        background-color: #4a4a54;
        
        &.selected {
          background-color: #202225;
        }
      }
      
      &.editor-tabs .tab {
        background-color: #4a4a54;
        
        &.selected {
          background-color: #202225;
        }
      }
      
      &.action-tabs .tab {
        background-color: #4a4a54;
        
        &.selected {
          background-color: #202225;
        }
      }
    }
  }
}


/* VSCode tab indicator */
.action-wrapper.vscode-selected {
  .action-wrapper__tabs {
    .tabs-row {
      .tab.selected {
        &::before {
          background-color: #6a7aff !important; /* Brighter blue for VSCode indicator */
        }
      }
    }
  }
}

/* Cursor tab indicator */
.action-wrapper.cursor-selected {
  .action-wrapper__tabs {
    .tabs-row {
      .tab.selected {
        &::before {
          background-color: #dc143c !important; /* Crimson for Cursor indicator */
        }
      }
    }
  }
}

/* Terminal tab indicator */
.action-wrapper.terminal-selected {
  .action-wrapper__tabs {
    .tabs-row {
      .tab.selected {
        &::before {
          background-color: #4caf50 !important; /* Green for Terminal indicator */
        }
      }
    }
  }
}

.action-button {
  width: 100%;
  height: 100%;
}

/* Styles for expanded state */
.action-button-grid__item.expanded .action-wrapper {
  transform: scale(1);
  opacity: 1;
  transition: all 0.4s ease-in-out;
}

/* Animation for the tabs when expanded */
.action-button-grid__item.expanded .action-wrapper__tabs {
  animation: fadeIn 0.4s ease-in-out 0.2s; /* Delay the animation to start after the button expands */
  animation-fill-mode: both; /* Keep the final state */
}

/* Improve button transition when expanded */
.action-button-grid__item.expanded .action-wrapper__main-button button {
  transition: all 0.4s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Add a nice scale effect when expanding */
.action-button-grid__item {
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Use a nice easing for the expansion */
  
  &.expanded {
    transform: scale(1.02); /* Slightly larger when expanded */
    transition-delay: 0.1s; /* Small delay before expanding */
  }
}
